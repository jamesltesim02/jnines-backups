{
	"info": {
		"_postman_id": "45da072f-26b8-43a4-9d3b-4fa74549ad04",
		"name": "wechat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "后台账号接口部分",
			"item": [
				{
					"name": "用户创建",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_name",
									"value": "test0724",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "password",
									"value": "a1234567",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://106.15.234.134:8989/api/v1/user/create",
							"protocol": "http",
							"host": [
								"106",
								"15",
								"234",
								"134"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "用户登录(登录成功之后会有用户id,请传给其他的接口)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed8d80c4-a23b-492a-81d3-1cf2ebe8f29b",
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.Code == 0) {",
									"    postman.setGlobalVariable(\"userid\", jsonData.Data)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_name",
									"value": "super01",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "password",
									"value": "a1234567",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/user/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "后台机器人微信账号",
			"item": [
				{
					"name": "账号分组创建",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "group_name",
									"value": "test12",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechatgroup/create",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechatgroup",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "账号分组获取一条",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechatgroup/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechatgroup",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "账号分组删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechatgroup/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechatgroup",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "账号分组列表",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechatgroup/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechatgroup",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "账号分组修改",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "group_name",
									"value": "",
									"description": "可选",
									"type": "text"
								},
								{
									"key": "status",
									"value": "",
									"description": "可选",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechatgroup/update",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechatgroup",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号添加或修改",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "group_id",
									"value": "1",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "wechat_id",
									"value": "test11",
									"type": "text"
								},
								{
									"key": "wechat_name",
									"value": "",
									"description": "微信用户名",
									"type": "text"
								},
								{
									"key": "wechat_password",
									"value": "",
									"type": "text"
								},
								{
									"key": "login_device_data",
									"value": "",
									"description": "62数据或者16数据",
									"type": "text"
								},
								{
									"key": "id",
									"value": "0",
									"description": "可选",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechat/save",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号详情",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc5e271d-5ce9-448c-9ea9-b48d60e400f3",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = \"\";",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "297",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "wxid_8axqag6ij0kt12",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechat/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechat/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "be3a5b79-d6a6-4a72-8cca-e3dbf578f835",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id:userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "1",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "size",
									"value": "100",
									"type": "text"
								},
								{
									"key": "group_id",
									"value": "0",
									"description": "可选过滤条件",
									"type": "text"
								},
								{
									"key": "order",
									"value": "id desc",
									"type": "text"
								},
								{
									"key": "wechat_alias",
									"value": "",
									"type": "text"
								},
								{
									"key": "wechat_mobile",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://192.168.1.156:8989/api/v1/bindwechat/list",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"156"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号列表导入",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "be3a5b79-d6a6-4a72-8cca-e3dbf578f835",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id:userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "account_list",
									"value": "15691077448----qqqq1111----A055c4775ed8973c\n15691077448----qqqq1111----A055c4775ed8973c",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "device_type",
									"value": "1",
									"type": "text"
								},
								{
									"key": "group_id",
									"value": "5",
									"description": "可选过滤条件",
									"type": "text"
								},
								{
									"key": "wechat_file_id",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechat/import",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号socks统计",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "be3a5b79-d6a6-4a72-8cca-e3dbf578f835",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id:userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechat/usedsocks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"usedsocks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "后台任务管理",
			"item": [
				{
					"name": "任务分类创建或更新",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "加粉",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "action",
									"value": "addFriendsTask",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/taskcategory/save",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"taskcategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务分类获取一条",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/taskcategory/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"taskcategory",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务分类删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/taskcategory/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"taskcategory",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务分类列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c401875b-370d-417e-961f-db8c4f78e469",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/taskcategory/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"taskcategory",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务创建或者更新",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"description": "填了就是修改",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "",
									"description": "分类id ",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "任务标题",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2019-04-2 00:00:00",
									"description": "任务开始时间",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2019-04-12 00:00:00",
									"description": "任务开始时间",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "",
									"description": "任务结束时间",
									"type": "text"
								},
								{
									"key": "interval",
									"value": "",
									"description": "定时任务间隔时间，每小时或者每天等等",
									"type": "text"
								},
								{
									"key": "status",
									"value": "",
									"type": "text"
								},
								{
									"key": "params",
									"value": "",
									"description": "json数据，如果有请填写",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/task/save",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"task",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务详情",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/task/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"task",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/task/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"task",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "任务列表",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "category_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "page",
									"value": "",
									"type": "text"
								},
								{
									"key": "size",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/task/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"task",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "后台素材管理",
			"item": [
				{
					"name": "素材分类创建",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tittle",
									"value": "微信头像",
									"description": "必填",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/materialcategory/create",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"materialcategory",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材分类更新",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tittle",
									"value": "微信头像",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/materialcategory/update",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"materialcategory",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材分类获取一条",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/materialcategory/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"materialcategory",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材分类删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/materialcategory/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"materialcategory",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材分类列表",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/materialcategory/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"materialcategory",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材创建或者更新",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"description": "填了就是修改",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "",
									"description": "分类id ",
									"type": "text"
								},
								{
									"key": "tittle",
									"value": "",
									"description": "素材标题",
									"type": "text"
								},
								{
									"key": "heading_img_path",
									"value": "",
									"description": "图片路径",
									"type": "text"
								},
								{
									"key": "remark",
									"value": "",
									"description": "备注",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "",
									"description": "1男2女 默认为1",
									"type": "text"
								},
								{
									"key": "nickname",
									"value": "",
									"type": "text"
								},
								{
									"key": "area",
									"value": "",
									"description": "请用-号分隔，微信是统一用拼音如：Hunan-Changsha ",
									"type": "text"
								},
								{
									"key": "background_img_path",
									"value": "",
									"description": "微信个人背景",
									"type": "text"
								},
								{
									"key": "signatrue",
									"value": "",
									"description": "个性签名",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/material/save",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"material",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材批量导入",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "heading_img_path",
									"type": "file"
								},
								{
									"key": "plaintext",
									"type": "file"
								},
								{
									"key": "category_id",
									"value": "4",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "background_img_path",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/material/import",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"material",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材详情",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/material/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"material",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/material/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"material",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "素材列表",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "category_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "page",
									"value": "",
									"type": "text"
								},
								{
									"key": "size",
									"value": "",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "",
									"type": "text"
								},
								{
									"key": "nickname",
									"value": "",
									"type": "text"
								},
								{
									"key": "area",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/material/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"material",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "所有地区代码",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/material/areacodes",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"material",
								"areacodes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "socks ip管理",
			"item": [
				{
					"name": "socks ip创建或者更新",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a0ebd889-883f-4931-9fbe-b668a6f33005",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"description": "填了就是修改",
									"type": "text",
									"disabled": true
								},
								{
									"key": "ip",
									"value": "120.132.23.27",
									"description": "ip地址",
									"type": "text"
								},
								{
									"key": "username",
									"value": "woaini",
									"description": "可以为空",
									"type": "text"
								},
								{
									"key": "password",
									"value": "woaini2020",
									"description": "可以为空",
									"type": "text"
								},
								{
									"key": "status",
									"value": "",
									"description": "默认为0",
									"type": "text"
								},
								{
									"key": "socks_port",
									"value": "3080",
									"type": "text"
								},
								{
									"key": "http_port",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/save",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "socks ip批量导入(还在完善)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0f81491a-f7ad-4f46-823b-056c82d1ea97",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "socks_txt",
									"type": "file",
									"src": "/Users/mac/Downloads/n条宜春.txt"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/import",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "socks ip详情",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/get",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "socks ip删除",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/del",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"del"
							]
						}
					},
					"response": []
				},
				{
					"name": "socks ip列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "1",
									"type": "text"
								},
								{
									"key": "size",
									"value": "10",
									"type": "text"
								},
								{
									"key": "status",
									"value": "1",
									"type": "text"
								},
								{
									"key": "order",
									"value": "bind_count asc,update_date desc",
									"type": "text"
								},
								{
									"key": "is_able",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "更新socks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "socks_info",
									"value": "{\"Address\":\"0804_m123_804321mt50.m123123.top:9999\",\"Username\":\"yunmi\",\"Password\":\"yunmi2019\",\"CityId\":\"\"}",
									"type": "text"
								},
								{
									"key": "used_times",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/updatecache",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"updatecache"
							]
						}
					},
					"response": []
				},
				{
					"name": "导出无效的socks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable(\"userid\")",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"5844964a92f58d12218b5927fe009bfe\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "1",
									"type": "text"
								},
								{
									"key": "size",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://120.78.86.222:8989/api/v1/socks/export",
							"protocol": "http",
							"host": [
								"120",
								"78",
								"86",
								"222"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取可用socks省份城市",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable(\"userid\")",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "1",
									"type": "text"
								},
								{
									"key": "size",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/export",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "vps\b推送ip信息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable(\"userid\")",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "identity",
									"value": "221.231.104.134:20051:20051",
									"type": "text"
								},
								{
									"key": "ip",
									"value": "114.115.222.32",
									"type": "text"
								},
								{
									"key": "city_id",
									"value": "江苏省盐城市",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/socks/pushnewip",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"socks",
								"pushnewip"
							]
						}
					},
					"response": []
				},
				{
					"name": "更改socks\b绑定系统设置",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable(\"userid\")",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "value",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:9999/api/v1/socks/setmaxbindcounts",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9999",
							"path": [
								"api",
								"v1",
								"socks",
								"setmaxbindcounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取socks\b绑定系统设置",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ee88be9-5aed-4bd8-a68b-5077e27bfde0",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable(\"userid\")",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:9999/api/v1/socks/getmaxbindcounts",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9999",
							"path": [
								"api",
								"v1",
								"socks",
								"getmaxbindcounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信账号相关部分",
			"item": [
				{
					"name": "login微信普通登录(登录成功会下发wxid,请保存)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "96e7919e-9ce9-4d8a-bdc1-761c204a4039",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d561b9aa-d9b5-440d-97a2-5ca7e2072aec",
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.Code == 0) {",
									"    postman.setGlobalVariable(\"wxid\", jsonData.Data[\"wxid\"])",
									"}",
									"    ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "15125540328",
									"type": "text"
								},
								{
									"key": "password",
									"value": "287506",
									"type": "text"
								},
								{
									"key": "six_data",
									"value": "A781ad09d243653c",
									"type": "text",
									"disabled": true
								},
								{
									"key": "device_type",
									"value": "2",
									"description": "1是\bipad,2是\b安卓；不传默认为1",
									"type": "text"
								},
								{
									"key": "socks_id",
									"value": "1929",
									"description": "也可以是{\"Address\":\"114.115.222.32:22222\",\"Username\":\"t3st\",\"Password\":\"12345WTF\",\"CityId\":\"\",\"Identity\":\"\"}",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"login"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "批量普通登录(登录成功会下发wxid,请保存) Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6329e8dd-7d54-4523-99fd-20e43da45936",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = \"\";",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "account_list",
									"value": "15691077448----qqqq1111----A055c4775ed8973c\\n",
									"description": "\\n分隔\b多个账号",
									"type": "text"
								},
								{
									"key": "device_type",
									"value": "",
									"description": "1是\bipad,2是\b安卓；不传默认为1",
									"type": "text"
								},
								{
									"key": "group_id",
									"value": "141",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/batchlogin?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"batchlogin"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "loginByQRCode微信扫码登录",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1bafe639-52b2-4b3d-ac32-662d80a5a19c",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "BEARER {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "uuid",
									"value": "093381B7-C9F1-6D79-6BF3-5957C8DB",
									"description": "客户端唯一标识，原样返回",
									"type": "text",
									"disabled": true
								},
								{
									"key": "wxid",
									"value": "wxid_3r147z022pad12",
									"description": "老号登录带上此参数",
									"type": "text",
									"disabled": true
								},
								{
									"key": "socks_id",
									"value": "1783",
									"description": "使用此ip登录",
									"type": "text",
									"disabled": true
								},
								{
									"key": "device_type",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/loginbyqrcode",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"loginbyqrcode"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkLoginQRStatus检查登录状态（会下发wxid，请保存）",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b81eabcb-d6f1-47ce-9791-4b0dddf6aec6",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4ce55448-5783-4b05-b1d1-469050887566",
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.Code == 0) {",
									"    postman.setGlobalVariable(\"wxid\", jsonData.Data[\"wxid\"])",
									"}",
									"    ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "uuid",
									"value": "093381B7-C9F1-6D79-6BF3-5957C8DB",
									"description": "原样返回",
									"type": "text",
									"disabled": true
								},
								{
									"key": "wxid",
									"value": "wxid_3r147z022pad12",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/checkloginqrcodestatus",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"checkloginqrcodestatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "批量检查登录\b状态接口",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "adf9f49a-98a3-4ddf-b237-1aafb608f147",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id:userid,",
									"                wxid:\"wxid_gxjx7p21tlen22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "734c7963-f0b6-490e-afca-83fb07473c77",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid_list",
									"value": "wxid_itjaoix0hdj422",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/batchcheckloginstatus",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"batchcheckloginstatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信账号登出",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cbf8e44e-ddda-450b-9a76-5f601c80516e",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_ldmlytj2tv7i22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/logout",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"logout"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "掉线状态时可以使用二次登陆",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cdaf7ef5-cd5a-482a-a1ab-c46cdba2a0a7",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_8zqbcje8i3do22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "device_type",
									"value": "2",
									"type": "text"
								},
								{
									"key": "socks_id",
									"value": "1520",
									"type": "text",
									"disabled": true
								},
								{
									"key": "change_ip",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/autoauth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"autoauth"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "\b同步个人信息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1c2766d9-a216-42e1-9f19-4884cbe60e38",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_8zqbcje8i3do22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/syncprofile",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"syncprofile"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SyncContacts同步联系人",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1c2766d9-a216-42e1-9f19-4884cbe60e38",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_a7y3462l6nad22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "currentContactSeq",
									"value": "686921186",
									"type": "text"
								},
								{
									"key": "currentChatroomContactSeq",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/synccontacts?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"synccontacts"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getContacts获取联系人",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "99df226a-15e1-4e10-a529-a693c7c97006",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "1",
									"type": "text"
								},
								{
									"key": "size",
									"value": "10",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "",
									"type": "text"
								},
								{
									"key": "mobile_md5",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/getcontacts?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"getcontacts"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "modifyArea修改地区",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "456e98a4-69c1-4a6d-ab99-77bc49afd0ab",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "province",
									"value": "Hunan",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Changsha",
									"type": "text"
								},
								{
									"key": "country",
									"value": "CN",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/modifyarea?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"modifyarea"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "modifySex修改性别",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "575e4d4b-9158-4d47-abb0-8bebe5b6e8ff",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "sex",
									"value": "2",
									"description": "1男2女",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/modifysex",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"modifysex"
							]
						}
					},
					"response": []
				},
				{
					"name": "修改昵称",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2Iiwid3hpZCI6Ind4aWRfOGF4cWFnNmlqMGt0MTIifQ.mYjaGCepSV2D9xJWUy-fqHF4EYKwsAZS0H4reij3-vQ"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nickname",
									"value": "wow",
									"description": "1男2女",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/updatenickname?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"updatenickname"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePersonality修改签名",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "personality",
									"value": "我是莉莉",
									"description": "签名",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/updatepersonality?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"updatepersonality"
							],
							"query": [
								{
									"key": "jwt",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjN9.PZLMJBT9OIVG2qgp9hQr685oVYFgRgWpcSPmNcw6y7M",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "modifyHeadImg修改头像",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2Iiwid3hpZCI6Ind4aWRfOGF4cWFnNmlqMGt0MTIifQ.mYjaGCepSV2D9xJWUy-fqHF4EYKwsAZS0H4reij3-vQ"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "img_data",
									"value": "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\nrLLgBGxHMlIPUVJqD/9k=",
									"type": "text"
								},
								{
									"key": "image_path",
									"value": "",
									"description": "可以是url，也可以素材保存的路径",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/modifyheadimg",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"modifyheadimg"
							]
						}
					},
					"response": []
				},
				{
					"name": "addFriendWithIMContact添加通讯录好友",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f43b17b0-e177-4cd7-8764-eb4367c18a72",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_n15vin4ruvnb22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "im_user_list",
									"value": "[\n        {\n            \"Phone\": \"18957541209\",\n            \"EncryptUserName\": \"v1_d3b8caf61227bb1b77dc8f7b4a4b031aac9f27b759dd5766c94594aa4945f34481206fd66f9e5533449dcbcd86893716@stranger\",\n            \"UserTicket\": \"v2_396e712121c0649b1cff088351080bb67c96d96991740d34afa6de7113892bafdd3b938370a096ddfc0016427ea8e758@stranger\",\n             \"Scene\":10,\n             \"Content\": \"验证语\"\n        }\n    ]",
									"description": "json数据列表",
									"type": "text"
								},
								{
									"key": "socks",
									"value": "{\"Address\":\"0804_m123_804321mt19.m123123.top:999\",\"Username\":\"yunmi\",\"Password\":\"yunmi2019\",\"CityId\":\"\"}",
									"description": "传了此项\b就会用短连接打招呼",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/addfiendwithimcontact",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"addfiendwithimcontact"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "启用手机通讯录\u001c匹配功能（第一次\b使用的必须调用）",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f43b17b0-e177-4cd7-8764-eb4367c18a72",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_fz4ngpvag7so22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/openimmatch",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"openimmatch"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "上传手机号同步最新联系人",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dec239cc-0099-445e-90c3-f21a126eeed2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_his275iwb0uq22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phone_list",
									"value": "15141508267,15039882634,18266072215,15141503612,13531866604,13996967688,18373056367,13996969949,18334709056,13996962820,18373050211,18373053383,13996961798,18745802403,13531869121,15886660650,13996963090,15141501250,18266079213,18266073679,13531867145,18266072172,18266073336,18373052729,18334708537,15886665673,18266075601,13996962666,18266074074,15886660639,15886662093,18373056849,18266079682,18266072964,18246421979,13996965452,13996967145,13996960955,18745802416,15890367395,13996965364,18373052226,15886660791,18334706778,13531860071,13996964695,15039882564,18266079152,18246429106,18266076728",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/uploadmcontact",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"uploadmcontact"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取通讯录联系人信息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "712f2bda-795c-4dbc-9538-61b4fd916b9b",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_his275iwb0uq22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "md5",
									"value": "101e898a05f9725620dc3a6738f84bfa",
									"type": "text",
									"disabled": true
								},
								{
									"key": "opcode",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/getimfriends",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"getimfriends"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "创建标签",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2Iiwid3hpZCI6Ind4aWRfOGF4cWFnNmlqMGt0MTIifQ.mYjaGCepSV2D9xJWUy-fqHF4EYKwsAZS0H4reij3-vQ"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "label",
									"value": "test1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/addcontactlabel?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"addcontactlabel"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "修改微信账号密码",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "db5d66f0-71ae-4c67-ab4e-c2aaa6bfe65a",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "old_pwd",
									"value": "a1234567",
									"description": "旧密码",
									"type": "text"
								},
								{
									"key": "pwd",
									"value": "bbb212213",
									"description": "新密码",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/changepassword?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"changepassword"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "删除标签",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "label",
									"value": "test1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/delcontactlabel?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"delcontactlabel"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "添加好友到标签",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2Iiwid3hpZCI6Ind4aWRfOGF4cWFnNmlqMGt0MTIifQ.mYjaGCepSV2D9xJWUy-fqHF4EYKwsAZS0H4reij3-vQ"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "label",
									"value": "id",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "wxid_ach0d1e8unqf12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/modifycontactlabellist?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"modifycontactlabellist"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取标签列表好友",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "66b94ebd-0da7-420f-904d-f2c2c9d8d8b2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "label",
									"value": "test1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/getcontactlabellist?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"getcontactlabellist"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "删除好友",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "test1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/delfriend?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"delfriend"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "添加好友",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7fe9d1f9-e64f-4de3-94e7-b62cc131d4a7",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "alias",
									"value": "uu774209",
									"type": "text",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "13096655794",
									"type": "text"
								},
								{
									"key": "verify_content",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/addfriend",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"addfriend"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "拉黑好友",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "test1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/banfriend?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"banfriend"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "搜索wxid或者群id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "972f3fc1-4027-43c6-b4a6-399be1a08080",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_0ndneljgjm3121\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "xingbakezhongguo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/searchcontact",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"searchcontact"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取自己的好友信息或\u001c群信息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "972f3fc1-4027-43c6-b4a6-399be1a08080",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid')",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_1nbjvyczd97f22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "wxid_0ndneljgjm3121",
									"type": "text"
								},
								{
									"key": "room_id",
									"value": "23108351410@chatroom",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/getcontact",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"getcontact"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ipad退出后pushlogin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ac67c321-b643-48c7-940a-ea8494524301",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/pushloginurl",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"pushloginurl"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取03数据",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "90d1bfd1-f88a-4e75-be2a-783384d1818c",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"80888e6d5dc9486bbbb9a421b7e88c75\",",
									"                wxid:\"chaoren_yoko\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "st_data",
									"value": "<clientCheckData><fileSafeAPI>yes</fileSafeAPI><dylibSafeAPI>yes</dylibSafeAPI><OSVersion>12.1</OSVersion><model>iPad</model><coreCount>2</coreCount><vendorID>001441CB-13D0-45F0-A15D-30BC432ACBEF</vendorID><adID>2D295906-1937-4F37-98FD-C80533E154EC</adID><ssid>3E74F16A7EF846F38F7329B637CB3AA7</ssid><carrierName>中国电信</carrierName><bssid>28:5a:eb:8c:55:23</bssid><netType>1</netType><isJailbreak>0</isJailbreak><bundleID>com.tencent.xin</bundleID><device>iPad 4.4</device><displayName>微信</displayName><version>385876778</version><plistVersion>385876769</plistVersion><USBState>1</USBState><HasSIMCard>1</HasSIMCard><languageNum>zh</languageNum><localeCountry>CN</localeCountry><isInCalling>2</isInCalling><weChatUUID>/var/mobile/Containers/Data/Application/CA0311E8-10E4-4004-9D70-1DDE1F1336A7/Documents</weChatUUID><AppState>0</AppState><illegalFileList></illegalFileList><readOutOfSandBoxFileList></readOutOfSandBoxFileList><encryptStatusOfMachO>1</encryptStatusOfMachO><md5OfMachOHeader>f067620d63bb10e4a425ba2f7c3f3b8b</md5OfMachOHeader><weChatUUID>906BC9C9-07D8-34AD-B4C3-C8623243BE06</weChatUUID><dylibInfo><i><s>/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/WeChat</s><u>906BC9C9-07D8-34AD-B4C3-C8623243BE06</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/zstd.framework/zstd</s><u>F326111B-2EBA-34E8-8830-657315905F43</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/TXLiteAVSDK_Smart_No_VOD.framework/TXLiteAVSDK_Smart_No_VOD</s><u>606505A0-69D9-3EBC-A4DB-758D54BE46AA</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/matrixreport.framework/matrixreport</s><u>1E7F06D2-DD36-31A8-AF3B-00D62054E1F9</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/YTFaceProSDK.framework/YTFaceProSDK</s><u>4F58B750-3134-36A2-9524-147872E9A607</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/GPUImage.framework/GPUImage</s><u>847B0606-87CA-3896-AE16-90DF0370DC94</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/WCDB.framework/WCDB</s><u>09941A29-AF95-3C1F-A6EC-A571EC4529FC</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/MMCommon.framework/MMCommon</s><u>917922FE-F15C-3A0C-9F9B-29DAE8BC08AF</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/MultiMedia.framework/MultiMedia</s><u>7FBD2D5F-806D-38DE-A54F-AE471B3F342F</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/QBar.framework/QBar</s><u>95DE8BA9-6A55-3642-8B1F-363BB507E2CD</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/QMapKit.framework/QMapKit</s><u>231A339F-6CBC-39BC-A88B-96FF1282390F</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/ConfSDK.framework/ConfSDK</s><u>BF039435-9428-3118-B245-219EADDB825A</u></i><i><s>/private/var/containers/Bundle/Application/BD28DEB1-8AB4-4928-B2CA-263EEF18B171/WeChat.app/Frameworks/mars.framework/mars</s><u>1FDA90F9-3548-3C40-9ED9-CCA85EBB882E</u></i></dylibInfo></clientCheckData><ccdcc>3743329428</ccdcc><ccdts>1566207676</ccdts>",
									"type": "text"
								},
								{
									"key": "version",
									"value": "5",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/generateclientcheckdata?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"generateclientcheckdata"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "订阅登录状态（用于回调）",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9f95416c-dba8-45eb-8e88-b68be17c0b5e",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable(\"wxid\");",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "http://www.baidu.com",
									"description": "回调url只能设置一次，\b修改的话需要重新登录微信",
									"type": "text"
								},
								{
									"key": "uuid",
									"value": "",
									"description": "客户端标识",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/subcribe",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"subcribe"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "设置\b别名（微信号）",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "alias",
									"value": "vdhrhz",
									"description": "\b设置微信号",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/setalias",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"setalias"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "自动\b\b通过好友请求",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5644856a-4cff-429b-99da-a2748cfd978e",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_d7wxiczbnne712\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "active",
									"value": "1",
									"description": "\b1开启；0关闭",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/verifyfriendswitch",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"verifyfriendswitch"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "当前环境",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "56fe69f2-3084-4c6b-8ac0-ee4e357d4e5a",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id:\"07249cdedca68d6077dd767f33967754\",",
									"                wxid:\"wxid_148ozfxfykfj22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "uuid",
									"value": "wxid_dzoocnv3b3kk22",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://39.99.141.133:8989/api/v1/account/environment",
							"protocol": "http",
							"host": [
								"39",
								"99",
								"141",
								"133"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"environment"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "更新riskbuf",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "56fe69f2-3084-4c6b-8ac0-ee4e357d4e5a",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id:userid,",
									"                wxid:\"\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "wxid_n15vin4ruvnb22",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/bindwechat/updateriskscan",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"bindwechat",
								"updateriskscan"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "根据状态获取\b微信id列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "56fe69f2-3084-4c6b-8ac0-ee4e357d4e5a",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_efi2delwyg2m22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "state",
									"value": "12007",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/filterlistbystate",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"filterlistbystate"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取微信服务在线状态",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_u4jf2lxtyiy722\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/onlineinfo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"onlineinfo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "扫码登录pc或者ipad设备",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "QRData",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/accessqrlogin",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"accessqrlogin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "授权密码登录新设备",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "QRData",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/authorizemanuallogin",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"authorizemanuallogin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取个人或者群二维码",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "",
									"description": "发送给谁",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/getqrcode",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"getqrcode"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取紧急联系人",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/gettrustedfriends",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"gettrustedfriends"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "获取安全设备列表",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/getsafetydeviceinfo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"getsafetydeviceinfo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "添加紧急联系人",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid_list",
									"value": "",
									"description": "逗号\b拼接",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/addtrustedfriends",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"addtrustedfriends"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "删除安全设备",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "uuid",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/delsafedevice",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"delsafedevice"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "通过个人二维码获取v1,v2数据(也可以获取公众号二维码信息)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_n15vin4ruvnb22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "https://weixin.qq.com/r/IRw3M2nEiaH1KS1Qb0ml",
									"description": "base64数据，获取到数据后通过addfiendwithimcontact \b添加好友，scene为30",
									"type": "text"
								},
								{
									"key": "search_type",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/searchuserbyqr",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"searchuserbyqr"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "回复加人请求",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_n15vin4ruvnb22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "wxid_ldmlytj2tv7i22",
									"type": "text"
								},
								{
									"key": "v2_ticket",
									"value": "v2_67df57f64fbe2ceaafc7680efabeb80a345558639bf54502200e8d94a1bfc796d4858b98f61685ff2737d7127fffcb04806a439337d45164f5df2882b9a5bcd1@stranger",
									"type": "text"
								},
								{
									"key": "content",
									"value": "我是李洋的朋友",
									"type": "text"
								},
								{
									"key": "scene",
									"value": "15",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/replayaddfriendreq",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"replayaddfriendreq"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "账号休眠",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_bntsp21ycwq822\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/account/sleep",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"account",
								"sleep"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信群相关部分",
			"item": [
				{
					"name": "createChatroom创建聊天室",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3c66e6a5-10e4-4da1-b664-28bc118349cc",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_1nbjvyczd97f22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "两人群",
									"type": "text",
									"disabled": true
								},
								{
									"key": "members",
									"value": "ll37577915,wxid_0j1nnzpnt51g22",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/create?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"create"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "退出群",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_id",
									"value": "",
									"description": "群聊id",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/quit?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"quit"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "扫码进群",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "QRData",
									"value": "",
									"description": "二维码base64数据",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/scanqrjoin?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"scanqrjoin"
							],
							"query": [
								{
									"key": "QRData",
									"value": "base64Data",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "\b\b执行群url进群",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "073613fe-95ec-45cc-9dd3-189a4abee0fa",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "https://weixin.qq.com/g/AUBMOFURoUQIhEMK",
									"description": "二维码base64数据",
									"type": "text"
								},
								{
									"key": "scene",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/joinbyurl?",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"joinbyurl"
							],
							"query": [
								{
									"key": "QRData",
									"value": "base64Data",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "拉人进群",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_id",
									"value": "6942572069@chatroom",
									"type": "text"
								},
								{
									"key": "members",
									"value": "wxid_dfneb0980y3b22",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/addnewmembers",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"addnewmembers"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取群成员列表",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_id",
									"value": "6942572069@chatroom",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/getchatroommembers",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"getchatroommembers"
							]
						}
					},
					"response": []
				},
				{
					"name": "自动进群开关",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_id",
									"value": "6942572069@chatroom",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/autojoinswitch",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"autojoinswitch"
							]
						}
					},
					"response": []
				},
				{
					"name": "微信群二维码简要信息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ea06d358-2601-448f-bf21-5948ac8e0731",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_yh7bymvh558512\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "https://weixin.qq.com/g/AfHBMtnLRsUNIVZH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/chatroominfobyqr",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"chatroominfobyqr"
							]
						}
					},
					"response": []
				},
				{
					"name": "设置群昵称",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ea06d358-2601-448f-bf21-5948ac8e0731",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_yh7bymvh558512\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "https://weixin.qq.com/g/AfHBMtnLRsUNIVZH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/setfriendname",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"setfriendname"
							]
						}
					},
					"response": []
				},
				{
					"name": "设置群成员昵称",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ea06d358-2601-448f-bf21-5948ac8e0731",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_yh7bymvh558512\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/setnicknameinroom",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"setnicknameinroom"
							]
						}
					},
					"response": []
				},
				{
					"name": "将群保存到通讯录",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ea06d358-2601-448f-bf21-5948ac8e0731",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_yh7bymvh558512\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/chatroom/saveroomcontact",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"chatroom",
								"saveroomcontact"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信朋友圈部分",
			"item": [
				{
					"name": "mmsnspost发送朋友圈",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_n15vin4ruvnb22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "123123",
									"description": "必填",
									"type": "text"
								},
								{
									"key": "sync_flag",
									"value": "",
									"description": "传1表示同步空间",
									"type": "text"
								},
								{
									"key": "img_list",
									"value": "http://120.78.86.222:8848/static/sns/2019/1013/8fd4f6c52e05e27a0ddb011769bc2d31.jpg",
									"description": "图片",
									"type": "text"
								},
								{
									"key": "video_list",
									"description": "从素材库里面拿出来\n",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "with_user_list",
									"value": "",
									"type": "text"
								},
								{
									"key": "black_list",
									"value": "",
									"type": "text"
								},
								{
									"key": "group_list",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/mmsns/mmsnspost",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"mmsns",
								"mmsnspost"
							]
						}
					},
					"response": []
				},
				{
					"name": "修改背景图",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "background",
									"description": "可以是文件可以\b素材路径，可以http图片",
									"type": "file",
									"src": "/Users/mac/Downloads/pexels-photo-296879.jpeg"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/mmsns/modifysnsbackgroud",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"mmsns",
								"modifysnsbackgroud"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取朋友圈",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_n15vin4ruvnb22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "first_page_md5",
									"value": "1baa1b7b7e3603dd",
									"type": "text"
								},
								{
									"key": "max_id",
									"value": "0",
									"type": "text"
								},
								{
									"key": "session",
									"value": "SisIofu/ptEtEAoYzu/X6wUqGgiqofz8zpf0vrYBEJqh9LrL6f6ktgEYCiABSisIk+DZptEtEAoY9PLX6wUqGgiqofz8zpf0vrYBEJqh9LrL6f6ktgEYCiABSisI/6TcptEtEAoYnvPX6wUqGgiqofz8zpf0vrYBEJqh9LrL6f6ktgEYCiAB",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/mmsns/snstimeline",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"mmsns",
								"snstimeline"
							]
						}
					},
					"response": []
				},
				{
					"name": "设置朋友\b圈可见范围",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_3gfkyvi0e0to22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "visible_range",
									"value": "3",
									"description": "1：3天， 2：半年，3：全部",
									"type": "text"
								},
								{
									"key": "sns_flag",
									"value": "1",
									"type": "text"
								},
								{
									"key": "sns_flagex",
									"value": "128",
									"type": "text"
								},
								{
									"key": "strage_flag",
									"value": "true",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/mmsns/snsvisible",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"mmsns",
								"snsvisible"
							]
						}
					},
					"response": []
				},
				{
					"name": "朋友圈评论点赞",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_n15vin4ruvnb22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "sns_id",
									"value": "13191000628739641409",
									"type": "text"
								},
								{
									"key": "to_username",
									"value": "zhangzhaolin494398",
									"type": "text"
								},
								{
									"key": "to_nickname",
									"value": "zhangzhaolin494398",
									"type": "text"
								},
								{
									"key": "type",
									"value": "2",
									"description": "1:点赞， 2：评论",
									"type": "text"
								},
								{
									"key": "content",
									"value": "赞",
									"description": "评论内容",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/mmsns/snscommet",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"mmsns",
								"snscommet"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取好友朋友圈和背景图",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "",
									"type": "text"
								},
								{
									"key": "first_page_md5",
									"value": "",
									"type": "text"
								},
								{
									"key": "max_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/mmsns/snsuserpage",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"mmsns",
								"snsuserpage"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信消息处理相关部分",
			"item": [
				{
					"name": "发送消息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e587a2b5-9947-47b1-addd-8e0d44b56833",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_ldmlytj2tv7i22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "to_wxid",
									"value": "wxid_o9b704atomvj12",
									"type": "text"
								},
								{
									"key": "content",
									"value": "good",
									"type": "text"
								},
								{
									"key": "at_user_list",
									"value": "",
									"description": "群昵称",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendmessage",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendmessage"
							]
						}
					},
					"response": []
				},
				{
					"name": "发送语音消息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b5260d3-f30d-433d-ae0f-7ad7eeecf722",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"742935eda7e242cda9c6ec977fe57d8e\",",
									"                wxid:\"jiangxizxs\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "to_wxid",
									"value": "22572653015@chatroom",
									"type": "text"
								},
								{
									"key": "voice_data",
									"value": "",
									"description": "base64数据",
									"type": "text"
								},
								{
									"key": "voice_len",
									"value": "4520",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendvoice",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendvoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "发送图片",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "535d780e-aa6d-455a-983c-b7c223b37518",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"6263df5be42ddd6536b9c2c297f1f089\",",
									"                wxid:\"wxid_pbnkm3x71c1g22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "to_wxid",
									"value": "6942572069@chatroom",
									"type": "text"
								},
								{
									"key": "image",
									"value": "ssss",
									"description": "base64数据",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendimage",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendimage"
							]
						}
					},
					"response": []
				},
				{
					"name": "发送动态表情",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "to_wxid",
									"value": "6942572069@chatroom",
									"type": "text"
								},
								{
									"key": "emoji_md5",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendemoji",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendemoji"
							]
						}
					},
					"response": []
				},
				{
					"name": "发送名片",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "25bc0679-bd25-4e08-8a65-3f09fde4032c",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_efi2delwyg2m22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "to_wxid",
									"value": "you19890803",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "floatbottle",
									"description": "发送谁的名片",
									"type": "text"
								},
								{
									"key": "nickname",
									"value": "漂流",
									"type": "text"
								},
								{
									"key": "sign",
									"value": "最美的\b",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendpersonalcard",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendpersonalcard"
							]
						}
					},
					"response": []
				},
				{
					"name": "群发消息",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid_list",
									"value": "6942572069@chatroom,",
									"description": "逗号分隔",
									"type": "text"
								},
								{
									"key": "content",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/masssend",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"masssend"
							]
						}
					},
					"response": []
				},
				{
					"name": "收到的微信消息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fe8c0b17-df80-4d70-9682-bb13cce69e28",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable(\"wxid\")",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "20",
									"type": "text"
								},
								{
									"key": "size",
									"value": "1",
									"type": "text"
								},
								{
									"key": "order",
									"value": "id desc",
									"type": "text"
								},
								{
									"key": "create_time_start",
									"value": "",
									"description": "开始时间",
									"type": "text"
								},
								{
									"key": "create_time_end",
									"value": "",
									"description": "结束时间",
									"type": "text"
								},
								{
									"key": "type",
									"value": "49",
									"type": "text"
								},
								{
									"key": "from_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "to_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/list",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "订阅消息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1af819ef-4026-40ad-ad2a-e075717d1b00",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "http://www.baidu.com/message",
									"description": "回调url只能设置一次，\b修改的话需要重新登录微信",
									"type": "text"
								},
								{
									"key": "uuid",
									"value": "",
									"description": "客户端标识",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/subcribe",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"subcribe"
							]
						}
					},
					"response": []
				},
				{
					"name": "发送文件",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_dzoocnv3b3kk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"value": "",
									"description": "base64",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "",
									"description": "发送给谁",
									"type": "text"
								},
								{
									"key": "filename",
									"value": "",
									"description": "自定义文件名字",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendfile",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendfile"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "发送视频",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "video",
									"value": "fff",
									"description": "base64",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "wxid_o9b704atomvj12",
									"description": "发送给谁",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendvideomsg",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendvideomsg"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "发送\b分享链接",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_ldmlytj2tv7i22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "desc",
									"value": "关注有奖",
									"description": "base64",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "you19890803",
									"description": "发送给谁",
									"type": "text"
								},
								{
									"key": "title",
									"value": "孩子长大了，懂得帮忙分担一些事情了",
									"description": "自定义文件名字",
									"type": "text"
								},
								{
									"key": "thumburl",
									"value": "https://ss0.bdstatic.com/-0U0bnSm1A5BphGlnYG/tam-ogel/f1d67c57e00fea1dc0f90210d7add1ad_121_121.jpg",
									"type": "text",
									"disabled": true
								},
								{
									"key": "url",
									"value": "http://mp.weixin.qq.com/s?__biz=MjM5NjU4NDk5OA==&amp;mid=2689284173&amp;idx=2&amp;sn=ec96311b3e385f0a9295465693aff3f1&amp;chksm=83589304b42f1a12978ecc03cd2a0cfeaec961ef13c46908d5fb3c7fc20de24fd0fc97463910&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1569493909626&amp;sharer_shareid=261d5d2d57b3a6330e36cfdf92a053cd#rd",
									"type": "text"
								},
								{
									"key": "sourcename",
									"value": "gh_b7679f21d483",
									"type": "text"
								},
								{
									"key": "sourcedisplayname",
									"value": "长沙在线网",
									"type": "text"
								},
								{
									"key": "cdnthumblength",
									"value": "21544",
									"type": "text"
								},
								{
									"key": "cdnthumburl",
									"value": "305b0201000454305202010002044b39dba402032f572502049a2b06af02045d8c939a042d6175706170706d73675f663665373166313766313736343435625f313536393439333931333733325f313233360204010800030201000400",
									"type": "text"
								},
								{
									"key": "cdnthumbmd5",
									"value": "828397e72bbbeabc5d96d98e1d51e186",
									"type": "text"
								},
								{
									"key": "cdnthumbwidth",
									"value": "120",
									"type": "text"
								},
								{
									"key": "cdnthumbheight",
									"value": "120",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendsharelink",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendsharelink"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "发送app\bmsg（分享链接，小程序）",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"var userid = postman.getGlobalVariable('userid');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_ldmlytj2tv7i22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "<appmsg appid=\"\" sdkver=\"0\">\n                <title>孩子长大了，懂得帮忙分担一些事情了</title>\n                <des />\n                <username />\n                <action>view</action>\n                <type>5</type>\n                <showtype>0</showtype>\n                <content />\n                <url>http://mp.weixin.qq.com/s?__biz=MjM5NjU4NDk5OA==&amp;mid=2689284173&amp;idx=2&amp;sn=ec96311b3e385f0a9295465693aff3f1&amp;chksm=83589304b42f1a12978ecc03cd2a0cfeaec961ef13c46908d5fb3c7fc20de24fd0fc97463910&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1569493909626&amp;sharer_shareid=261d5d2d57b3a6330e36cfdf92a053cd#rd</url>\n                <lowurl />\n                <dataurl />\n                <lowdataurl />\n                <contentattr>0</contentattr>\n                <streamvideo>\n                        <streamvideourl />\n                        <streamvideototaltime>0</streamvideototaltime>\n                        <streamvideotitle />\n                        <streamvideowording />\n                        <streamvideoweburl />\n                        <streamvideothumburl />\n                        <streamvideoaduxinfo />\n                        <streamvideopublishid />\n                </streamvideo>\n                <canvasPageItem>\n                        <canvasPageXml><![CDATA[]]></canvasPageXml>\n                </canvasPageItem>\n                <appattach>\n                        <attachid />\n                        <cdnthumburl>305b0201000454305202010002044b39dba402032f572502049a2b06af02045d8c939a042d6175706170706d73675f663665373166313766313736343435625f313536393439333931333733325f313233360204010800030201000400</cdnthumburl>\n                        <cdnthumbmd5>828397e72bbbeabc5d96d98e1d51e186</cdnthumbmd5>\n                        <cdnthumblength>21544</cdnthumblength>\n                        <cdnthumbheight>120</cdnthumbheight>\n                        <cdnthumbwidth>120</cdnthumbwidth>\n                        <cdnthumbaeskey>303859d95606e5054ba6f231ff07c725</cdnthumbaeskey>\n                        <aeskey>303859d95606e5054ba6f231ff07c725</aeskey>\n                        <encryver>1</encryver>\n                        <fileext />\n                        <islargefilemsg>0</islargefilemsg>\n                </appattach>\n                <extinfo />\n                <androidsource>2</androidsource>\n                <sourceusername>gh_b7679f21d483</sourceusername>\n                <sourcedisplayname>长沙在线网</sourcedisplayname>\n                <commenturl />\n                <thumburl />\n                <mediatagname />\n                <messageaction><![CDATA[]]></messageaction>\n                <messageext><![CDATA[]]></messageext>\n                <emoticongift>\n                        <packageflag>0</packageflag>\n                        <packageid />\n                </emoticongift>\n                <emoticonshared>\n                        <packageflag>0</packageflag>\n                        <packageid />\n                </emoticonshared>\n                <designershared>\n                        <designeruin>0</designeruin>\n                        <designername>null</designername>\n                        <designerrediretcturl>null</designerrediretcturl>\n                </designershared>\n                <emotionpageshared>\n                        <tid>0</tid>\n                        <title>null</title>\n                        <desc>null</desc>\n                        <iconUrl>null</iconUrl>\n                        <secondUrl>null</secondUrl>\n                        <pageType>0</pageType>\n                </emotionpageshared>\n                <webviewshared>\n                        <shareUrlOriginal>http://mp.weixin.qq.com/s?__biz=MjM5NjU4NDk5OA==&amp;mid=2689284173&amp;idx=2&amp;sn=ec96311b3e385f0a9295465693aff3f1&amp;chksm=83589304b42f1a12978ecc03cd2a0cfeaec961ef13c46908d5fb3c7fc20de24fd0fc97463910&amp;scene=90&amp;xtrack=1&amp;subscene=93&amp;clicktime=1569493895#rd</shareUrlOriginal>\n                        <shareUrlOpen>https://mp.weixin.qq.com/s?__biz=MjM5NjU4NDk5OA==&amp;mid=2689284173&amp;idx=2&amp;sn=ec96311b3e385f0a9295465693aff3f1&amp;chksm=83589304b42f1a12978ecc03cd2a0cfeaec961ef13c46908d5fb3c7fc20de24fd0fc97463910&amp;scene=90&amp;xtrack=1&amp;subscene=93&amp;clicktime=1569493895&amp;ascene=56&amp;devicetype=android-28&amp;version=2700063e&amp;nettype=WIFI&amp;abtest_cookie=BQABAAgACgALABIAEwAFAJ2GHgAjlx4AVpkeAMiZHgDzmR4AAAA%3D&amp;lang=zh_CN&amp;pass_ticket=IHFM8NbfUUuL0%2FjDqX5nGVCKZfd8bg6D4GJQfCXKlKGEXseD6I1oKBh68hnNsxNN&amp;wx_header=1</shareUrlOpen>\n                        <jsAppId />\n                        <publisherId>msg_7811529778275358140</publisherId>\n                </webviewshared>\n                <template_id />\n                <md5>828397e72bbbeabc5d96d98e1d51e186</md5>\n                <weappinfo>\n                        <username />\n                        <appid />\n                        <appservicetype>0</appservicetype>\n                        <videopageinfo>\n                                <thumbwidth>120</thumbwidth>\n                                <thumbheight>120</thumbheight>\n                                <fromopensdk>0</fromopensdk>\n                        </videopageinfo>\n                </weappinfo>\n                <statextstr />\n                <mmreadershare>\n                        <itemshowtype>0</itemshowtype>\n                </mmreadershare>\n                <websearch>\n                        <rec_category>0</rec_category>\n                        <channelId>0</channelId>\n                </websearch>\n        </appmsg>\n        <fromusername>you19890803</fromusername>\n        <scene>0</scene>\n        <appinfo>\n                <version>1</version>\n                <appname></appname>\n        </appinfo>\n        <commenturl></commenturl>",
									"description": "base64",
									"type": "text"
								},
								{
									"key": "to_wxid",
									"value": "you19890803",
									"description": "发送给谁",
									"type": "text"
								},
								{
									"key": "typ",
									"value": "5",
									"description": "自定义文件名字",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendappmsg",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendappmsg"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "发送小程序链接",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "",
									"description": "base64",
									"type": "text"
								},
								{
									"key": "title",
									"value": "",
									"description": "发送给谁",
									"type": "text"
								},
								{
									"key": "desc",
									"value": "",
									"description": "自定义文件名字",
									"type": "text"
								},
								{
									"key": "url",
									"value": "",
									"type": "text"
								},
								{
									"key": "thumburl",
									"value": "",
									"type": "text"
								},
								{
									"key": "thumbmd5",
									"value": "",
									"type": "text"
								},
								{
									"key": "thumblength",
									"value": "",
									"type": "text"
								},
								{
									"key": "thumbheight",
									"value": "",
									"type": "text"
								},
								{
									"key": "thumbwidth",
									"value": "",
									"type": "text"
								},
								{
									"key": "thumbaeskey",
									"value": "",
									"type": "text"
								},
								{
									"key": "asekey",
									"value": "",
									"type": "text"
								},
								{
									"key": "androidsource",
									"value": "",
									"type": "text"
								},
								{
									"key": "sourceusername",
									"value": "",
									"type": "text"
								},
								{
									"key": "sourcedisplayname",
									"value": "",
									"type": "text"
								},
								{
									"key": "pagepath",
									"value": "",
									"type": "text"
								},
								{
									"key": "username",
									"value": "",
									"type": "text"
								},
								{
									"key": "appid",
									"value": "",
									"type": "text"
								},
								{
									"key": "version",
									"value": "",
									"type": "text"
								},
								{
									"key": "weappiconurl",
									"value": "",
									"type": "text"
								},
								{
									"key": "shareId",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendapplink",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendapplink"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "转发合并消息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_qj965magfqcp22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "to_wxid",
									"value": "you19890803",
									"type": "text"
								},
								{
									"key": "title",
									"value": "\bkk的聊天记录",
									"description": "发送给谁",
									"type": "text"
								},
								{
									"key": "msgitems",
									"value": "[{\"DataType\":1,\"DataFmt\":\"\",\"SourceTime\":1565315280,\"Desc\":\"我是\",\"ThumbSize\":0,\"CdnDataUrl\":\"\",\"CdnDataKey\":\"\",\"CdnThumbUrl\":\"\",\"CdnThumbKey\":\"\",\"FullMd5\":\"\",\"ThumbFullMd5\":\"\",\"DataSize\":0,\"Duration\":0,\"SrcChatname\":\"\",\"SourName\":\"锁心\",\"FromUsr\":\"wxid_iky2enyvd3gq22\"},{\"DataType\":2,\"DataFmt\":\"pic\",\"SourceTime\":1565315280,\"Desc\":\"我是\",\"ThumbSize\":1666,\"CdnDataUrl\":\"305f020100045830560201000204c52e3a1802032f57250204182c06af02045d4cd0f20431777875706c6f61645f777869645f6e3934713762643879756b633132345f313536353331353331335f6d73675468756d620204010400030201000400\",\"CdnDataKey\":\"b75bc8042b0b0fa623c51c80e6659a73\",\"CdnThumbUrl\":\"305e020100045730550201000204c52e3a1802032f57250204182c06af02045d4cd0f10430777875706c6f61645f777869645f6e3934713762643879756b633132345f313536353331353331335f325f7468756d620204010400010201000400\",\"CdnThumbKey\":\"ff131b451cf18d0624eaccbdb5550d6d\",\"FullMd5\":\"4c446981a0201891e0beb10fc76bf6c1\",\"ThumbFullMd5\":\"5e4335171f535be1df8a9c5c8eba6aa9\",\"DataSize\":41106,\"Duration\":4,\"SrcChatname\":\"\",\"SourName\":\"锁心\",\"FromUsr\":\"wxid_iky2enyvd3gq22\"}]",
									"description": "自定义文件名字",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/sendmergemsg",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"sendmergemsg"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "转发视频消息",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51b651c6-ce74-487b-aeb3-bea56efc5ce2",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable(\"userid\");",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_t77qd7xctp3l22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxid",
									"value": "you19890803",
									"type": "text"
								},
								{
									"key": "video_url",
									"value": "3069020100046230600201000204bdf7e6b402032f57250204932c06af02045d6f6188043b617570766964656f5f346161353534653566613231363738375f313536373538303535305f313530323330303430393139373564366461393735300204010400040201000400",
									"description": "发送给谁",
									"type": "text"
								},
								{
									"key": "aes_key",
									"value": "72f283717f28778fdb7f3a26aeec921f",
									"description": "自定义文件名字",
									"type": "text"
								},
								{
									"key": "thumb_url",
									"value": "3069020100046230600201000204bdf7e6b402032f57250204932c06af02045d6f6188043b617570766964656f5f346161353534653566613231363738375f313536373538303535305f313530323330303430393139373564366461393735300204010400040201000400",
									"type": "text"
								},
								{
									"key": "thumb_key",
									"value": "72f283717f28778fdb7f3a26aeec921f",
									"type": "text"
								},
								{
									"key": "video_md5",
									"value": "2402370cbaa85b9902b3e36962e7758d",
									"type": "text"
								},
								{
									"key": "new_md5",
									"value": "7fdd5194d293422efb4cb487e21e54e3",
									"type": "text"
								},
								{
									"key": "thumb_length",
									"value": "13342",
									"type": "text"
								},
								{
									"key": "video_length",
									"value": "255240",
									"type": "text"
								},
								{
									"key": "thumb_width",
									"value": "512",
									"type": "text"
								},
								{
									"key": "thumb_height",
									"value": "242",
									"type": "text"
								},
								{
									"key": "crc",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/message/redicetvideomsg",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"message",
								"redicetvideomsg"
							],
							"query": [
								{
									"key": "video_url",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信钱包处理",
			"item": [
				{
					"name": "打开红包",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "channel_id",
									"value": "6942572069@chatroom",
									"description": "逗号分隔",
									"type": "text"
								},
								{
									"key": "msg_type",
									"value": "",
									"type": "text"
								},
								{
									"key": "send_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "native_url",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/openwxhb",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"openwxhb"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取红包领取详情",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "limit",
									"value": "",
									"type": "text"
								},
								{
									"key": "offset",
									"value": "",
									"type": "text"
								},
								{
									"key": "send_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "native_url",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/getdetailwxhb",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"getdetailwxhb"
							]
						}
					},
					"response": []
				},
				{
					"name": "收款",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "trans_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "transfer_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "invalid_time",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/transferoperation",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"transferoperation"
							]
						}
					},
					"response": []
				},
				{
					"name": "带金额的收款二维码",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2Iiwid3hpZCI6Ind4aWRfOGF4cWFnNmlqMGt0MTIifQ.mYjaGCepSV2D9xJWUy-fqHF4EYKwsAZS0H4reij3-vQ"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "20",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/transfersetf2ffee",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"transfersetf2ffee"
							]
						}
					},
					"response": []
				},
				{
					"name": "收款二维码",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5927a1da-d3ec-4480-b062-33866087cbc4",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_0auphd50n9ie12\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "20",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/f2fqrcode",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"f2fqrcode"
							]
						}
					},
					"response": []
				},
				{
					"name": "零钱明细",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8d462400-7974-496a-a939-6602dde8b6ef",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "json",
									"value": "",
									"description": "结果里的params进行翻页时需要重新\b构造，取最后一条记录\b属性\n",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/getwalletdetail",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"getwalletdetail"
							]
						}
					},
					"response": []
				},
				{
					"name": "额度变更记录查询",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2Iiwid3hpZCI6Ind4aWRfOGF4cWFnNmlqMGt0MTIifQ.mYjaGCepSV2D9xJWUy-fqHF4EYKwsAZS0H4reij3-vQ"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "1",
									"type": "text"
								},
								{
									"key": "size",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/getcreditorderfromlocal",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"getcreditorderfromlocal"
							]
						}
					},
					"response": []
				},
				{
					"name": "收款查询",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "trans_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "transfer_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "invalid_time",
									"value": "",
									"type": "text"
								},
								{
									"key": "user_name",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/transferquery",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"transferquery"
							]
						}
					},
					"response": []
				},
				{
					"name": "转账",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "55f0edf9-86a3-475a-aa7d-87f876f17c37",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = \"\";",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:'wxid_o9b704atomvj12',",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "wxid_72k4816x6k4u22",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/wallet/transferorder",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"wallet",
								"transferorder"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信公众号",
			"item": [
				{
					"name": "\b授权url获取资源url",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9e347c80-d135-4510-a833-76dce7af825e",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzU1Njk0OTUzOQ==#wechat_webview_type=1&wechat_redirect",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/gettaticurl",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"gettaticurl"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取公众号文章内容",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "http://mp.weixin.qq.com/s?__biz=MjM5MzAxODg4MA==&amp;mid=2650943579&amp;idx=1&amp;sn=d3ad6d9193a6dd47854e313e5a741c7d&amp;chksm=bd6bf5348a1c7c22618e1c0ceb381672b0d6cbdf37380492792d40c64c9e102f308f617c33cd&amp;scene=27#wechat_redirect",
									"type": "text"
								},
								{
									"key": "scene",
									"value": "",
									"type": "text"
								},
								{
									"key": "wxid",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/getarticlecontent",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"getarticlecontent"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取文章点赞等信息",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "6942572069@chatroom",
									"description": "逗号分隔",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/getarticleextinfo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"getarticleextinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取文章阅读数",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTIzNDU2In0.aH5_cSMR10KIL1XtQ5JRf_v3_qAGF2yWQS7h18PAXBw"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "6942572069@chatroom",
									"description": "逗号分隔",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/getarticlereadlikenum",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"getarticlereadlikenum"
							]
						}
					},
					"response": []
				},
				{
					"name": "关注公众号",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "biz_username",
									"value": "gh_e4bb47006478",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/subcribebiz",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"subcribebiz"
							]
						}
					},
					"response": []
				},
				{
					"name": "公众号\b内容同步",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "24b8d422-17c8-4b6d-b1b1-a713cecca6c7",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_jubkzp84atyk22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "biz_username",
									"value": "gh_e4bb47006478",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/bizattrsync",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"bizattrsync"
							]
						}
					},
					"response": []
				},
				{
					"name": "公众号详情",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "biz_username",
									"value": "gh_e4bb47006478",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/bizprofile",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"bizprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取文章评论列表",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appmsg_id",
									"value": "2650943579",
									"description": "文章id,公众号历史消息获取",
									"type": "text"
								},
								{
									"key": "header_info",
									"value": "[{\"name\":\"X-WECHAT-KEY\",\"key\":\"d73b8cd195ca32c256fef3b5b72b474eae2024d086c6ccd0826498c49d69fcfdf07467c1c31851f4eb3d858f3c86b4b8b113edec541d11264794c9dd8a11545efc2cb98ecd5f8a1e996f0d26031cdfff\"},{\"name\":\"X-WECHAT-UIN\",\"key\":\"MTMxNzQ4ODYwNg%3D%3D\"}]",
									"description": "文章内容中获取",
									"type": "text"
								},
								{
									"key": "biz_ticket_info",
									"value": "{\"PassTicket\":\"CIeg6si6OuTnOIWpHKD6UIDvKWZgPppr4ce6ovjNZBca%2BnviAoZJtZqzAmQOcuTR\",\"DeviceType\":\"iPad+iOS12.2\",\"Biz\":\"MjM5MzAxODg4MA==\", \"AppmsgToken\":\"\", \"ClientVersion\":\"17000428\", \"Wxtoken\":\"777\"}",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "comment_id",
									"value": "968958113175011329",
									"type": "text"
								},
								{
									"key": "idx",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/bizgetcomments",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"bizgetcomments"
							]
						}
					},
					"response": []
				},
				{
					"name": "文章评论点赞",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appmsg_id",
									"value": "2650943579",
									"description": "文章id,公众号历史消息获取",
									"type": "text"
								},
								{
									"key": "comment_id",
									"value": "968958113175011329",
									"description": "文章内容中获取",
									"type": "text"
								},
								{
									"key": "biz_ticket_info",
									"value": "{\"PassTicket\":\"CIeg6si6OuTnOIWpHKD6UIDvKWZgPppr4ce6ovjNZBca%2BnviAoZJtZqzAmQOcuTR\",\"DeviceType\":\"iPad+iOS12.2\",\"Biz\":\"MjM5MzAxODg4MA==\", \"AppmsgToken\":\"\", \"ClientVersion\":\"17000428\", \"Wxtoken\":\"777\"}",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "like",
									"value": "1",
									"description": "1点赞，0取消",
									"type": "text"
								},
								{
									"key": "content_id",
									"value": "913260255020843124",
									"description": "评论列表获取",
									"type": "text"
								},
								{
									"key": "header_info",
									"value": "[{\"name\":\"X-WECHAT-KEY\",\"key\":\"d73b8cd195ca32c256fef3b5b72b474eae2024d086c6ccd0826498c49d69fcfdf07467c1c31851f4eb3d858f3c86b4b8b113edec541d11264794c9dd8a11545efc2cb98ecd5f8a1e996f0d26031cdfff\"},{\"name\":\"X-WECHAT-UIN\",\"key\":\"MTMxNzQ4ODYwNg%3D%3D\"}]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/bizcommentlike",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"bizcommentlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "文章在看",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appmsg_id",
									"value": "2247483672",
									"description": "就是url中mid",
									"type": "text"
								},
								{
									"key": "idx",
									"value": "1",
									"description": "文章内容中获取",
									"type": "text"
								},
								{
									"key": "header_info",
									"value": "[{\"name\":\"X-WECHAT-KEY\",\"key\":\"87cd876d8a5f91c735103e4d03c6c60ab8243c6d60f9f04ae3d4addcbe1083d964743c55563c88e4c5826ce5f3d28eda16223165cc8b4bf7a8ff3c77a92cc228646082ddca8e7891389850f0779befe0\"},{\"name\":\"X-WECHAT-UIN\",\"key\":\"MTMxNzQ4ODYwNg%3D%3D\"}]",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "biz_ticket_info",
									"value": "{\"PassTicket\":\"%2Bzu6e1lOt98D4mOKpE8dyxstztccVecHH9%2FVdNfRqmLNXIwM4y%2BqyNs2cxmAvMaS\",\"DeviceType\":\"iPad+iOS12.2\",\"Biz\":\"MzU1Njk0OTUzOQ==\", \"AppmsgToken\":\"\", \"ClientVersion\":\"17000428\", \"Wxtoken\":\"777\"}",
									"description": "1点赞，0取消",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/bizarticlelike",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"bizarticlelike"
							]
						}
					},
					"response": []
				},
				{
					"name": "文章留言",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appmsg_id",
									"value": "",
									"description": "文章id,公众号历史消息获取",
									"type": "text"
								},
								{
									"key": "comment_id",
									"value": "",
									"description": "文章内容中获取",
									"type": "text"
								},
								{
									"key": "biz_ticket_info",
									"value": "",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "content",
									"value": "",
									"type": "text"
								},
								{
									"key": "title",
									"value": "",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "sn",
									"value": "",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "idx",
									"value": "",
									"description": "文章url中获取",
									"type": "text"
								},
								{
									"key": "head_img",
									"value": "",
									"description": "评论列表中获取",
									"type": "text"
								},
								{
									"key": "header_info",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/bizaddcomment",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"bizaddcomment"
							]
						}
					},
					"response": []
				},
				{
					"name": "历史消息",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MjM5MzAxODg4MA==&scene=126&bizpsid=0&devicetype=iPad+iOS12.2&version=17000428&lang=zh_CN&nettype=WIFI&a8scene=0&pass_ticket=CIeg6si6OuTnOIWpHKD6UIDvKWZgPppr4ce6ovjNZBca%2BnviAoZJtZqzAmQOcuTR&wx_header=1",
									"type": "text"
								},
								{
									"key": "headers",
									"value": "[{\"name\":\"X-WECHAT-KEY\",\"key\":\"f4b5b8bc071bb8263627b74e72bd426ac50a5bbaf49fe0f302a2c0094897daff0a772ebaa46fc034c2bf7f7b98f0cc58394241f5c6b47a11828aa8251746a5c026c626b012a9324e8d1e799ba3d4dce3\"},{\"name\":\"X-WECHAT-UIN\",\"key\":\"MTMxNzQ4ODYwNg%3D%3D\"}]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/getbizhistorylist",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"getbizhistorylist"
							]
						}
					},
					"response": []
				},
				{
					"name": "历史消息url",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MjM5MzAxODg4MA==&scene=126&bizpsid=0#wechat_redirect",
									"type": "text"
								},
								{
									"key": "biz_username",
									"value": "gh_038fdb3e0b72",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/article/getbizhistorylisturl",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"article",
								"getbizhistorylisturl"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信小程序",
			"item": [
				{
					"name": "搜索小程序(也可以搜索公众号)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dbe4a4e5-8099-4fdb-a059-ddad0626d9a5",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_kilwtfvyjemv22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "keyword",
									"value": "不正常人类研究中心",
									"description": "逗号分隔",
									"type": "text"
								},
								{
									"key": "type",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/app/websearch",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"app",
								"websearch"
							]
						}
					},
					"response": []
				},
				{
					"name": "授权登录小程序",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "266a360e-1ac0-469d-af5e-a79759ddda23",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appid",
									"value": "wx32540bd863b27570",
									"description": "逗号分隔",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/app/jsoperatewxdata",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"app",
								"jsoperatewxdata"
							]
						}
					},
					"response": []
				},
				{
					"name": "获取appid等属性",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "282eec72-084a-4f71-aece-7ab4926d9ccf",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxa_username",
									"value": "gh_0e7477744313@app",
									"description": "逗号分隔",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/app/wxaatrrsync",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"app",
								"wxaatrrsync"
							]
						}
					},
					"response": []
				},
				{
					"name": "js登录获取微信code",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "282eec72-084a-4f71-aece-7ab4926d9ccf",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appid",
									"value": "wx32540bd863b27570",
									"description": "逗号分隔",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/app/jslogin",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"app",
								"jslogin"
							]
						}
					},
					"response": []
				},
				{
					"name": "登录拼多多",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "282eec72-084a-4f71-aece-7ab4926d9ccf",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "wxa_username",
									"value": "gh_0e7477744313@app",
									"description": "逗号分隔",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/app/loginpinduoduo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"app",
								"loginpinduoduo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CDN相关程序",
			"item": [
				{
					"name": "下载图片",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dbe4a4e5-8099-4fdb-a059-ddad0626d9a5",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "aes_key",
									"value": "",
									"description": "逗号分隔",
									"type": "text"
								},
								{
									"key": "url",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/cdn/downloadimage",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"cdn",
								"downloadimage"
							]
						}
					},
					"response": []
				},
				{
					"name": "下载视频",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "266a360e-1ac0-469d-af5e-a79759ddda23",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "aes_key",
									"value": "",
									"type": "text"
								},
								{
									"key": "url",
									"value": "",
									"type": "text"
								},
								{
									"key": "length",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/cdn/downloadvideo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"cdn",
								"downloadvideo"
							]
						}
					},
					"response": []
				},
				{
					"name": "下载语音",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "282eec72-084a-4f71-aece-7ab4926d9ccf",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var userid = postman.getGlobalVariable('userid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: userid,",
									"                wxid:\"wxid_t77qd7xctp3l22\",",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "msg_id",
									"value": "1788838429264473214",
									"type": "text"
								},
								{
									"key": "client_msg_id",
									"value": "49718fe86b6a7ba14d5d5609641444b6wxid_t77qd7xctp3l2221_1567576057",
									"type": "text"
								},
								{
									"key": "voice_len",
									"value": "75258",
									"type": "text"
								},
								{
									"key": "buf_id",
									"value": "5333151335242137977",
									"type": "text"
								},
								{
									"key": "from_username",
									"value": "you19890803",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/cdn/downloadvoice",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"cdn",
								"downloadvoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "下载文件",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "282eec72-084a-4f71-aece-7ab4926d9ccf",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"28\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "aes_key",
									"value": "",
									"type": "text"
								},
								{
									"key": "fileid",
									"value": "",
									"type": "text"
								},
								{
									"key": "length",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/cdn/downloadfile",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"cdn",
								"downloadfile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "微信设置栏目",
			"item": [
				{
					"name": "收藏夹同步",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "key",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/setting/favsync",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"setting",
								"favsync"
							]
						}
					},
					"response": []
				},
				{
					"name": "\b收藏夹取其中一条详情",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fav_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/setting/getfav",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"setting",
								"getfav"
							]
						}
					},
					"response": []
				},
				{
					"name": "\b收藏夹删除一条",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fav_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/setting/delfav",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"setting",
								"delfav"
							]
						}
					},
					"response": []
				},
				{
					"name": "\b收藏夹添加",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b5e14e-59a4-4856-9a81-492288e84a74",
								"exec": [
									"//postman.setGlobalVariable(\"timestamps\",Math.floor(new Date().getTime()/1000));",
									"//timestamps = postman.getGlobalVariable('timestamps');",
									"var wxid = postman.getGlobalVariable('wxid');",
									"var CryptoJS = require(\"crypto-js\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({ alg: \"HS256\", typ: \"JWT\" }));",
									"var part1 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"",
									"part1 = part1.trimRight(\"=\");",
									"var wordArray = CryptoJS.enc.Utf8.parse(JSON.stringify({",
									"                timestamp:Date.parse(new Date()),",
									"                user_id: \"1\",",
									"                wxid:wxid,",
									"            }));",
									"var part2 = CryptoJS.enc.Base64.stringify(",
									"            wordArray",
									"        );",
									"part2 = part2.trimRight(\"=\");",
									"var part3 =  CryptoJS.HmacSHA256(part1 +'.'+ part2, 'secret')",
									"part3 = base64url(part3);",
									"var token = part1 + '.' + part2 + '.' + part3;",
									"postman.setGlobalVariable(\"token\",token);",
									"console.log(token);",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "BEARER {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "object",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8989/api/v1/setting/addfav",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8989",
							"path": [
								"api",
								"v1",
								"setting",
								"addfav"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "static url暂时不需要",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-WECHAT-KEY",
						"value": "d73b8cd195ca32c256fef3b5b72b474eae2024d086c6ccd0826498c49d69fcfdf07467c1c31851f4eb3d858f3c86b4b8b113edec541d11264794c9dd8a11545efc2cb98ecd5f8a1e996f0d26031cdfff",
						"type": "text"
					},
					{
						"key": "X-WECHAT-UIN",
						"value": "MTMxNzQ4ODYwNg%3D%3D",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://mp.weixin.qq.com/mp/appmsg_comment?f=json&pass_ticket=CIeg6si6OuTnOIWpHKD6UIDvKWZgPppr4ce6ovjNZBca%2BnviAoZJtZqzAmQOcuTR&wxtoken=777&devicetype=iPad+iOS12.2&clientversion=17000428&appmsg_token=&__biz=MjM5MzAxODg4MA==&appmsgid=2650943579&mid=2650943579&idx=1\n&comment_id=968958113175011329&action=getcomment&offset=0&limit=100&scene=0&wx_header=1",
					"protocol": "https",
					"host": [
						"mp",
						"weixin",
						"qq",
						"com"
					],
					"path": [
						"mp",
						"appmsg_comment"
					],
					"query": [
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "pass_ticket",
							"value": "CIeg6si6OuTnOIWpHKD6UIDvKWZgPppr4ce6ovjNZBca%2BnviAoZJtZqzAmQOcuTR"
						},
						{
							"key": "wxtoken",
							"value": "777"
						},
						{
							"key": "devicetype",
							"value": "iPad+iOS12.2"
						},
						{
							"key": "clientversion",
							"value": "17000428"
						},
						{
							"key": "appmsg_token",
							"value": ""
						},
						{
							"key": "__biz",
							"value": "MjM5MzAxODg4MA=="
						},
						{
							"key": "appmsgid",
							"value": "2650943579"
						},
						{
							"key": "mid",
							"value": "2650943579"
						},
						{
							"key": "idx",
							"value": "1\n"
						},
						{
							"key": "comment_id",
							"value": "968958113175011329"
						},
						{
							"key": "action",
							"value": "getcomment"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "100"
						},
						{
							"key": "scene",
							"value": "0"
						},
						{
							"key": "wx_header",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}