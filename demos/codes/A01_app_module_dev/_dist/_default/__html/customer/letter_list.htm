<!DOCTYPE html><html><head><title>博天堂娱乐-娱乐航母,博彩天堂</title><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,minimum-scale=1,maximum-scale=1"><meta name="format-detection" content="telephone=no"></head><body onclick="toggleSupport()"><link rel="stylesheet" href="../../__modules/ui-common/dist/ui-common.min.css"><link rel="stylesheet" href="../../__css/main.css"><template id="hImageTmpl"><a-img :src="src" remote="true"></a-img></template><template id="aImageTmpl"><div class="img-loader loading"><img ref="imgComp" :data-src="src"></div></template><template id="appTmpl"><div class="app-container"><div style="display:none" id="proTitle">{{title}}</div><app-content></app-content></div></template><template id="contentTmpl"><div id="page_content" class="flex_1"><div class="sent"><ul class="sent-msg-list"><div v-if="!letterList || !letterList.length" class="center" style="padding:40px 10px">暂无数据</div><div v-else=""><li class="item" v-for="l in letterList"><a newview="true" forward="forward" :href="l.url" class="header"><h3 class="recipient">收件人：{{l.receiver}}<span class="date">{{l.created_date.substr(0, 7)}} <i class="icon icon100"></i></span></h3><h3 class="type white">类型：{{l.typeName}}</h3><h3 class="type" style="padding-right:10px">内容：{{l.content}}</h3></a></li></div></ul></div></div></template><div id="container"></div><script>!function(n){var t;n.ENV_MODEL="app",n.appState=(t={},{getData:function(){return t},setData:function(n){t=Object.assign(t,n)}}),n.appInstance=null,n.bus=null}(window)</script><script src="../../__js/common/constant.js"></script><script src="../../__modules/es6-shim/es6-shim.min.js"></script><script src="../../__modules/es7-shim/dist/es7-shim.min.js"></script><script src="../../__modules/hybrid-fastclick/dist/hybrid-fastclick.min.js"></script><script src="../../__modules/jquery/dist/jquery.min.js"></script><script src="../../__modules/jsbridge-core/dist/jsbridge-core.min.js"></script><script src="../../__modules/jsbridge-util/dist/jsbridge-util.min.js"></script><script src="../../__modules/vue/dist/vue.min.js"></script><script src="../../__modules/ui-common/dist/ui-common.min.js"></script><script src="../../__modules/business-util/dist/business-util.min.js"></script><script src="../../__js/modules/dropload.min.js"></script><script src="../../__modules/iscroll/build/iscroll.js"></script><script src="../../__js/common/utils.js"></script><script>Vue.component("h-img", {
	template: "#hImageTmpl",
	props: ["src"]
});

;(function () {

	function ImageQuee(type) {
		this.quee = [];
		this.loaded = false;
		this.type = type;
	}

	ImageQuee.prototype = {
		loadImage: function (img) {
			var src = img.dataset.src;
			if(this.type == "remote") {
				src = OtherUtils.getStaticurl() + src;
			}
			img.src = src;
		},
		add: function (imgComp) {
			if(this.loaded) {
				return this.loadImage(imgComp);
			}

			this.quee.push(imgComp);
		},
		load: function () {
			while(this.quee && this.quee.length) {
				this.loadImage(this.quee.shift());
			}
			this.loaded = true;
		}
	};

	var localQuee = new ImageQuee("local"),
		remoteQuee = new ImageQuee("remote");

	Vue.component("a-img", {
		template: "#aImageTmpl",
		props: ["src","remote"],
		watch: {
			src: function (newVal, oldVal) {
				var img = this.$refs.imgComp;

				if(this.remote) {
					newVal = OtherUtils.getStaticurl() + newVal;
				}

				img.src = "";
				img.src = newVal;
				img.parentNode.className = "img-loader loading";
			}
		},
		mounted: function () {
			var imgComp = this.$refs.imgComp;

			imgComp.onload = function (){this.parentNode.className = "img-loader";};
			imgComp.onerror = function (e) {
				this.onload();
				// TODO 加载失败时 从域名下获取图片
			};

			this.loadImage();
		},
		methods: {
			loadImage: function () {
				var quee = this.remote ? remoteQuee : localQuee;
				quee.add(this.$refs.imgComp);
			}
		}
	});
	window.addEventListener("load", localQuee.load.bind(localQuee));
	JSBridge.onReady(remoteQuee.load.bind(remoteQuee));
})();

window.App = Vue.extend({
    template: "#appTmpl",
    data: function() {
        return {
            title: ""
        };
    }
});
FastClick.attach(document.body, { tapDelay: 100 });

;(function(){
appState.setData({
    title: '已发消息',
    needLogin: true
});
var data = {
     letterList: []
 };
Vue.component("app-content", {
    template: "#contentTmpl",
    data:function(){
        return data;
    },
    methods: {

    }
});

function getList(page_num=1, page_size=50)
{
    JSBridge.net.invoke({
        url: "A01/letter/getList",
        data: {
            'page_num': page_num,
            'page_size': page_size
        },
        success: function (result) {
            var expireAt = 120;
            result.forEach(function (v, i) {
            	result[i]['url'] = 'customer/letter_history.htm?id='+ v.request_id;
            });
            data.letterList = result;
            JSBridge.cache.save("letterListData", {
                data: result,
                outtime: new Date().getTime() + expireAt*1000
            }, 1);
        },
        error: function (error) {
        	$.toast.fail(error ? error.message : "页面加载失败");
        }
    });
}

JSBridge.onReady(function () {
    var _this = data;
    
    // 获取数据
    var d = new Date();
    var dataCache = JSBridge.cache.get("letterListData");
    if (dataCache && d.getTime() < dataCache.outtime) {
        _this.letterList = dataCache.data;
    } else {
    	getList();
    }
}); 
})();</script><script>var e=appState.getData();function a(){var e=$(".header_index .pop_support");e.hasClass("hide")||0!=e.attr("is_show")||e.addClass("hide")}bus=new Vue,e.needLogin&&!CustomerUtils.isLoged()?JSBridge.onReady(function(){JSBridge.forward.inside({url:"common/login.htm?from="+OtherUtils.getPath(),newView:"true"})}):appInstance=new App({el:"#container",data:e})</script></body></html>