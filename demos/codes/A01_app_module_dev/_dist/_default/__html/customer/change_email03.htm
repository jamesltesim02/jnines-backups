<!DOCTYPE html><html><head><title>博天堂娱乐-娱乐航母,博彩天堂</title><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,minimum-scale=1,maximum-scale=1"><meta name="format-detection" content="telephone=no"></head><body onclick="toggleSupport()"><link rel="stylesheet" href="../../__modules/ui-common/dist/ui-common.min.css"><link rel="stylesheet" href="../../__css/main.css"><template id="hImageTmpl"><a-img :src="src" remote="true"></a-img></template><template id="aImageTmpl"><div class="img-loader loading"><img ref="imgComp" :data-src="src"></div></template><template id="appTmpl"><div class="app-container"><div style="display:none" id="proTitle">{{title}}</div><app-content></app-content></div></template><template id="contentTmpl"><div class="main_content"><section id="newBind" class="modifymobile_content _03" style="padding-top:20px"><div class="layout_form p-top-rmv"><form id="infoForm" action="" method="post"><div class="form_field_wrap"><div class="form_field"><span class="label">新邮箱地址</span><div class="input_wrap"><input class="txt_right" type="text" v-model.trim="email" maxlength="120"></div></div><div class="form_field"><span class="label">验证码</span><div class="input_wrap sm"><input type="text" v-model="codeInput" name="code" maxlength="6"></div><div id="sendCode" v-bind:class="[disabled ? '' : 'active-btn', 'sendCode']" v-on:click.stop.prevent="sendCode">{{send_btn_text}}</div></div></div><p class="notif" v-if="code_sended">验证码已发送，15分钟内输入有效，请勿泄漏</p><div class="form_btn-wrap"><a id="bindPhone" v-on:click.stop.prevent="checkCode" class="btn btn-lg btn-ylw">确定</a></div></form></div></section></div></template><div id="container"></div><script>!function(n){var t;n.ENV_MODEL="app",n.appState=(t={},{getData:function(){return t},setData:function(n){t=Object.assign(t,n)}}),n.appInstance=null,n.bus=null}(window)</script><script src="../../__js/common/constant.js"></script><script src="../../__modules/es6-shim/es6-shim.min.js"></script><script src="../../__modules/es7-shim/dist/es7-shim.min.js"></script><script src="../../__modules/hybrid-fastclick/dist/hybrid-fastclick.min.js"></script><script src="../../__modules/jquery/dist/jquery.min.js"></script><script src="../../__modules/jsbridge-core/dist/jsbridge-core.min.js"></script><script src="../../__modules/jsbridge-util/dist/jsbridge-util.min.js"></script><script src="../../__modules/vue/dist/vue.min.js"></script><script src="../../__modules/ui-common/dist/ui-common.min.js"></script><script src="../../__modules/business-util/dist/business-util.min.js"></script><script src="../../__js/modules/dropload.min.js"></script><script src="../../__modules/iscroll/build/iscroll.js"></script><script src="../../__js/common/utils.js"></script><script>Vue.component("h-img", {
	template: "#hImageTmpl",
	props: ["src"]
});

;(function () {

	function ImageQuee(type) {
		this.quee = [];
		this.loaded = false;
		this.type = type;
	}

	ImageQuee.prototype = {
		loadImage: function (img) {
			var src = img.dataset.src;
			if(this.type == "remote") {
				src = OtherUtils.getStaticurl() + src;
			}
			img.src = src;
		},
		add: function (imgComp) {
			if(this.loaded) {
				return this.loadImage(imgComp);
			}

			this.quee.push(imgComp);
		},
		load: function () {
			while(this.quee && this.quee.length) {
				this.loadImage(this.quee.shift());
			}
			this.loaded = true;
		}
	};

	var localQuee = new ImageQuee("local"),
		remoteQuee = new ImageQuee("remote");

	Vue.component("a-img", {
		template: "#aImageTmpl",
		props: ["src","remote"],
		watch: {
			src: function (newVal, oldVal) {
				var img = this.$refs.imgComp;

				if(this.remote) {
					newVal = OtherUtils.getStaticurl() + newVal;
				}

				img.src = "";
				img.src = newVal;
				img.parentNode.className = "img-loader loading";
			}
		},
		mounted: function () {
			var imgComp = this.$refs.imgComp;

			imgComp.onload = function (){this.parentNode.className = "img-loader";};
			imgComp.onerror = function (e) {
				this.onload();
				// TODO 加载失败时 从域名下获取图片
			};

			this.loadImage();
		},
		methods: {
			loadImage: function () {
				var quee = this.remote ? remoteQuee : localQuee;
				quee.add(this.$refs.imgComp);
			}
		}
	});
	window.addEventListener("load", localQuee.load.bind(localQuee));
	JSBridge.onReady(remoteQuee.load.bind(remoteQuee));
})();

window.App = Vue.extend({
    template: "#appTmpl",
    data: function() {
        return {
            title: ""
        };
    }
});
FastClick.attach(document.body, { tapDelay: 100 });

appState.setData({
    needLogin: true,
    title: '更换邮箱'
});
Vue.component("app-content", {
    template: "#contentTmpl",
    data: function () {
        return {
            time: 0,
            code_sended: false,
            email: '',
            oldEmail: '',
            codeInput: ''
        }
    },
    mounted:function(){
        var _this = this;
        JSBridge.onReady(function(){
            _this.oldEmail = JSBridge.cache.get("customer").email;
        });
    },
    methods: {
        timer: function() {
            var _this = this;
            if (this.time > 0) {
                this.time--;
                setTimeout(_this.timer, 1000);
            }
        },
        sendCode: function() {
            if (this.disabled) return;
            var email_address = this.email;
            if(!email_address) {
                $.toast.fail("请输入邮箱地址");
                return;
            }
            var re_email = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            if(!(/\*\*/.test(email_address)) && !(re_email.test(email_address))) {
                $.toast.fail("请输入正确的邮箱格式");
                return;
            }
            //发送验证码
            var _this = this;
            JSBridge.net.invoke({
                url: "verify/send",
                data: {
                    "type": 2,
                    "v_type": 4,
                    "send_to": email_address,
                    "timestamp": Date.now()
                },
                success: function (result) {
                    _this.time = 60
                    _this.timer();
                    _this.code_sended = true;
                },
                error: function (error) {
                    $.toast.fail(error.message);
                }
            });
        },
        checkCode: function() {
            var _this = this;
            if(!_this.codeInput) {
                $.toast.fail("请输入验证码");
                return;
            }
            //验证验证码
            JSBridge.net.invoke({
                url: "verify/check",
                data: {
                    "type": 2,
                    "v_type": 4,
                    "send_to": _this.email,
                    "code": _this.codeInput,
                    "timestamp": Date.now()
                },
                success: function (result) {
                    JSBridge.net.invoke({
                        url: "verify/bind",
                        data: {
                            "type": 2,
                            "send_to": _this.email,
                            'old_send_to':_this.oldEmail
                            "request_id": result
                        },
                        success:function(result){
                            $.toast.success('新邮箱绑定成功。', function() {
                                JSBridge.forward.inside({url: "customer/member_center.htm"});
                            });
                        },
                        error:function(error){
                            $.toast.fail(error.message);
                        }
                    });        
                },
                error: function (error) {
                    $.toast.fail(error.message);
                }
            });
        }
    },
    computed: {
        send_btn_text: function () {
            if (this.code_sended) {
                return this.time > 0 ? '重新发送（'+this.time+'）' : '重新发送';
            } else {
                return '发送验证码'
            }
        },
        disabled: function() {
            return this.time > 0;
        }
    }
});</script><script>var e=appState.getData();function a(){var e=$(".header_index .pop_support");e.hasClass("hide")||0!=e.attr("is_show")||e.addClass("hide")}bus=new Vue,e.needLogin&&!CustomerUtils.isLoged()?JSBridge.onReady(function(){JSBridge.forward.inside({url:"common/login.htm?from="+OtherUtils.getPath(),newView:"true"})}):appInstance=new App({el:"#container",data:e})</script></body></html>