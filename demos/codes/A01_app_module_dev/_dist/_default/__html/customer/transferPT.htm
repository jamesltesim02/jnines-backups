<!DOCTYPE html><html><head><title>博天堂娱乐-娱乐航母,博彩天堂</title><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,minimum-scale=1,maximum-scale=1"><meta name="format-detection" content="telephone=no"></head><body onclick="toggleSupport()"><link rel="stylesheet" href="../../__modules/ui-common/dist/ui-common.min.css"><link rel="stylesheet" href="../../__css/main.css"><template id="hImageTmpl"><a-img :src="src" remote="true"></a-img></template><template id="aImageTmpl"><div class="img-loader loading"><img ref="imgComp" :data-src="src"></div></template><template id="appTmpl"><div class="app-container"><div style="display:none" id="proTitle">{{title}}</div><app-content></app-content></div></template><template id="contentTmpl"><div class="transfer_content"><div class="nav-tab"><a forward="forward" newview="true" href="customer/transferPoker.htm" class="tab-item">棋牌转账<span class="icon icon88"></span></a> <a class="tab-item active">PT转账 <span class="icon icon88"></span></a></div><div class="transfer_box"><div class="box" v-bind:class="reverse?'box1': ''"><p class="value"><span class="amount">{{useable_credit}}</span> 元</p><p class="label">可转额度</p></div><div class="transfer_btn"><a @click="change"><i class="icon icon89"></i></a></div><div class="box" v-bind:class="!reverse?'box1': ''"><p class="value"><span class="amount amount-game">{{pt_credit}}</span> 元</p><p class="label">PT额度</p></div><div class="extraimg"><img v-show="!reverse" src="../../__static/__images/transfer/img1.png" class="arrow-in"> <img v-show="reverse" src="../../__static/__images/transfer/img2.png" class="arrow-out"></div></div><div class="layout_form"><form action="" method="post"><div class="form_field_wrap"><div class="form_field"><span class="label">转账金额</span><div class="input_wrap txt_right"><input type="text" v-model="amount" placeholder="最少转移1元" disabled></div></div></div><div class="form_btn-wrap"><a @click="transfer" href="javascript: void(0);" class="btn btn-lg btn-ylw">确定</a></div></form></div></div></template><div id="container"></div><script>!function(n){var t;n.ENV_MODEL="app",n.appState=(t={},{getData:function(){return t},setData:function(n){t=Object.assign(t,n)}}),n.appInstance=null,n.bus=null}(window)</script><script src="../../__js/common/constant.js"></script><script src="../../__modules/es6-shim/es6-shim.min.js"></script><script src="../../__modules/es7-shim/dist/es7-shim.min.js"></script><script src="../../__modules/hybrid-fastclick/dist/hybrid-fastclick.min.js"></script><script src="../../__modules/jquery/dist/jquery.min.js"></script><script src="../../__modules/jsbridge-core/dist/jsbridge-core.min.js"></script><script src="../../__modules/jsbridge-util/dist/jsbridge-util.min.js"></script><script src="../../__modules/vue/dist/vue.min.js"></script><script src="../../__modules/ui-common/dist/ui-common.min.js"></script><script src="../../__modules/business-util/dist/business-util.min.js"></script><script src="../../__js/modules/dropload.min.js"></script><script src="../../__modules/iscroll/build/iscroll.js"></script><script src="../../__js/common/utils.js"></script><script>Vue.component("h-img", {
	template: "#hImageTmpl",
	props: ["src"]
});

;(function () {

	function ImageQuee(type) {
		this.quee = [];
		this.loaded = false;
		this.type = type;
	}

	ImageQuee.prototype = {
		loadImage: function (img) {
			var src = img.dataset.src;
			if(this.type == "remote") {
				src = OtherUtils.getStaticurl() + src;
			}
			img.src = src;
		},
		add: function (imgComp) {
			if(this.loaded) {
				return this.loadImage(imgComp);
			}

			this.quee.push(imgComp);
		},
		load: function () {
			while(this.quee && this.quee.length) {
				this.loadImage(this.quee.shift());
			}
			this.loaded = true;
		}
	};

	var localQuee = new ImageQuee("local"),
		remoteQuee = new ImageQuee("remote");

	Vue.component("a-img", {
		template: "#aImageTmpl",
		props: ["src","remote"],
		watch: {
			src: function (newVal, oldVal) {
				var img = this.$refs.imgComp;

				if(this.remote) {
					newVal = OtherUtils.getStaticurl() + newVal;
				}

				img.src = "";
				img.src = newVal;
				img.parentNode.className = "img-loader loading";
			}
		},
		mounted: function () {
			var imgComp = this.$refs.imgComp;

			imgComp.onload = function (){this.parentNode.className = "img-loader";};
			imgComp.onerror = function (e) {
				this.onload();
				// TODO 加载失败时 从域名下获取图片
			};

			this.loadImage();
		},
		methods: {
			loadImage: function () {
				var quee = this.remote ? remoteQuee : localQuee;
				quee.add(this.$refs.imgComp);
			}
		}
	});
	window.addEventListener("load", localQuee.load.bind(localQuee));
	JSBridge.onReady(remoteQuee.load.bind(remoteQuee));
})();

window.App = Vue.extend({
    template: "#appTmpl",
    data: function() {
        return {
            title: ""
        };
    }
});
FastClick.attach(document.body, { tapDelay: 100 });

;
(function() {
    var ptData = {
        loadCount: '0.00',
        localCredit: '0.00',
        pt_credit: '0.00',
        apCredit: '0.00',
        amount: "加载中...",
        useable_credit:'加载中...',
        reverse: false
    };
    appState.setData({
        title: 'PT转账',
        needLogin: true
    });
    Vue.component("app-content", {
        template: "#contentTmpl",
        data: function() {
            return ptData;
        },
        mounted: function() {
            JSBridge.onReady(async function() {
                await new Promise(function(resolve, reject) {
                    JSBridge.net.invoke({
                        url: "credits/total",
                        success: function(result) {
                            ptData.localCredit = (+result || 0).toFixed(2);
                            resolve()
                        },
                        error: function(error) {
                            $.toast.fail("查询额度出错,请联系客服", function() {
                                JSBridge.forward.inside({ url: "customer/member_center.htm" });
                            });
                            reject()
                        }
                    });
                })
                await new Promise(function(resolve, reject) {
                    JSBridge.net.invoke({
                        url: "credits/game",
                        data: {
                            game_name: "PT"
                        },
                        success: function(result) {
                            ptData.pt_credit = (+result || 0).toFixed(2);
                            resolve()
                        },
                        error: function(error) {
                            $.toast.fail("查询额度出错,请联系客服", function() {
                                JSBridge.forward.inside({ url: "customer/member_center.htm" });
                            });
                            reject()
                        }
                    });
                })
                await new Promise(function(resolve, reject) {
                    JSBridge.net.invoke({
                        url: "credits/game",
                        data: {
                            game_name: "AP"
                        },
                        success: function(result) {
                            ptData.apCredit = (+result || 0).toFixed(2);
                            ptData.amount = Math.max(parseInt(ptData.localCredit * 100 - ptData.apCredit * 100 - ptData.pt_credit * 100) / 100, 0).toFixed(2)
                            ptData.useable_credit = ptData.amount;
                            resolve()
                        },
                        error: function(error) {
                            $.toast.fail("查询额度出错,请联系客服", function() {
                                JSBridge.forward.inside({ url: "customer/member_center.htm" });
                            });
                            reject()
                        }
                    });
                })
            });
        },
        methods: {
        	change:function(){
        		this.reverse = !this.reverse;
        		if(this.reverse){
        			this.amount = this.pt_credit;
        		}else{
        			this.amount = this.useable_credit;
        		}
        	},
            transfer: function() {
                var _this = this;
                if(!parseFloat(this.amount) || +this.amount == 0) {
                	$.toast.fail("转账金额，不能为0");
                	return;
                }
            
                JSBridge.net.invoke({
                    url: "credits/transfer",
                    data: {
                        game_name: "PT",
                        amount: _this.amount,
                        type: !this.reverse ? 0 : 1 //1是从PT转到本地
                    },
                    success: function(result) {
                        $.toast.success("转账成功", function() {
                            JSBridge.forward.inside({ url: "customer/member_center.htm" });
                        });
                    },
                    error: function(error) {
                        console.log(error);
                        $.toast.fail((error && error.message) || "转账出错,请联系客服");
                    }
                });
            }
        }
    });
})();</script><script>var e=appState.getData();function a(){var e=$(".header_index .pop_support");e.hasClass("hide")||0!=e.attr("is_show")||e.addClass("hide")}bus=new Vue,e.needLogin&&!CustomerUtils.isLoged()?JSBridge.onReady(function(){JSBridge.forward.inside({url:"common/login.htm?from="+OtherUtils.getPath(),newView:"true"})}):appInstance=new App({el:"#container",data:e})</script></body></html>