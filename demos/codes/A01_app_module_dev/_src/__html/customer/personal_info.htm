<template id="contentTmpl">
	<div class="display_flex_h bank_info">
		<div class="main_content">
			<section class="personaldata_content">
		    <div class="layout_form">
		        <form action="" method="post">            
		            <div class="form_field_wrap change_input">
		                <div class="form_field">
		                    <span class="label">预留信息</span>      
		                    <div class="input_wrap txt_right">
		                    	<input v-bind:disabled='nofinsh' v-if='addInfo' v-model='verify_code' class="txt_right" type="text" value="" placeholder="1-16位数字，字母或文字">
				                <div class="reservedInfo"  v-if='!addInfo'>
                                    <span class="yellow2">{{verify_code}}</span>
                                </div>
		                    </div>
		                </div>  
		                <div class="form_field">
		                    <span class="label">真实姓名</span>      
		                    <div class="input_wrap txt_right">
		                    	<input v-bind:disabled='nofinsh' v-model='real_name' class="txt_right" type="text" value="" placeholder="需与持卡人姓名相同">
		                    </div>
		                </div>  
		                <div class="form_field">
		                    <span class="label">性别</span>     
		                    <div class="input_wrap txt_right select_left">
		                    	<select v-model='sex'>
				                    <option name='man'>男</option>
				                    <option name='woman'>女</option>
				                </select>
		                    </div>
		                </div>  
		                <div class="form_field">
		                    <span class="label">出生日期</span>      
		                    <div class="input_wrap txt_right">
		                    	<input  v-model='birth_date' :readonly='birthdateAlready' class="txt_right" type="date" value="" placeholder="">
		                        <span class="icon icon64"  v-if='isfinsh'></span>
		                    </div>
		                </div> 

		                <div class="form_field">
		                    <span class="label">邮箱地址</span>      
		                    <div class="input_wrap txt_right">
		                    	<input v-model='email' :readonly='emailAlready' class="txt_right" type="email" value="" placeholder="">
		                    </div>
		                </div>  
		                <div class="form_field">
		                    <span class="label">地址</span>    
		                    <div class="input_wrap txt_right">
		                    	<input v-model='address' class="txt_right" type="text" value="" placeholder="">
		                    </div>
		                </div>  
		                <div class="form_field">
		                    <span class="label">备注</span>  
		                    <div class="input_wrap txt_right">
		                    	<input  v-model='remarks' class="txt_right" type="text" value="" placeholder="">
		                    </div>
		                </div>  
		                
		            </div>
		            <div class="form_btn-wrap">
		                <a id="submitButton"  href="javascript: void(0);" class="btn btn-lg btn-ylw" @click='submitInfo'>保存</a>
		            </div>
		        </form>
		    </div>
		</section>
		</div>
    </div>
</template>
<script>
	
;(function () {
	var data = {
		verify_code:'',
		real_name:'',
		sex:'',
		birth_date:'',
		formated_birthday: '',
		birthday: null,
		email:'',
		address:'',
		remarks:'',
		nofinsh:true,
		isfinsh:true,
		addInfo:true,
		emailAlready: false,
		birthdateAlready: false
	};
	appState.setData({
	    title: "个人资料",
	    needLogin: true
	});	
		
	Vue.component("app-content", {
		template: "#contentTmpl",
		data:function(){
			return data;
		},
		watch: {
			birth_date: function(n, o) {
				if(n) {
					this.birthday = new Date(Date.parse(this.birth_date));
					this.formated_birthday = this.birthday.Format("yyyy-MM-dd 00:00:00");
				} else {
					this.birthday = null;
					this.formated_birthday = null;
				}
			},
			real_name: function (n, o) {
				this.real_name = (""+n).toLowerCase()
			}
		},
		methods:{
			submitInfo:function(){
				var self=this;
				if(updatecontrol){
					update();
					return false;
				}
				var reg1=/^(\w|[\u4e00-\u9fa5]){1,16}$/.test(self.verify_code);//预留信息正则：匹配1-16个数字、字母、中文、下划线
				var reg2=/^(\w|·|\*|[\u4e00-\u9fa5])+$/.test(self.real_name) ;//真实姓名正则：英文中文或· 一个以上
	//			var reg3=/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(this.birthday_date) ;//出生日期正则：日期2017/02/23
	//			var reg4=/\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/.test(this.email);//邮箱正则
	//			var reg5=/^(\w|[\u4e00-\u9fa5]){3,}$/.test(this.address);//地址正则：多余三个中文字符或字母
	//          var reg6=!!this.sex;//性别不为空则为true
	            if(!reg1){
	            	$.toast.fail("预留信息填写错误"); 
	            	return false;
	            }
	            
	            
	            if(!reg2){
	            	$.toast.fail("真实姓名填写错误");
	            	return false;
	            }
	            
	            if(self.birth_date){
	            	year18Date = new Date();
					year18Date.setFullYear(year18Date.getFullYear() - 18);

					if(self.birthday.getTime() > year18Date.getTime()) {
						$.toast.fail("您的年龄未满十八岁");
	            		return false;
					}
	            };
	            
	            ajax();
	            
				
				function ajax(){
					var personInfo = {
						"verify_code": self.verify_code,
						"real_name": self.real_name,
						"sex": self.sex=='男'?'M':'F',
						"birth_date": self.formated_birthday,
						"email": self.email,
						"address": self.address,
						"remarks": self.remarks,
					};
					JSBridge.net.invoke({//调用完善用户信息接口
						url: "users/completeInfo",
						data: personInfo,
						success: function (result) {
							var customer = Object.assign(JSBridge.cache.get("customer"), personInfo);
							JSBridge.cache.update("customer", customer);
							if(self.address || self.remarks){
								var pwd=customer.pwd;
								var personInfo2 = {
									"sex":self.sex=='男'?'M':'F',
									"birth_date": self.formated_birthday,
									"email": self.email,
									"address": self.address,
									"remarks": self.remarks,
									'pwd':pwd
								};

								JSBridge.net.invoke({//调用更新用户信息接口
									url: "users/updateInfo",
									data: personInfo2,
									success: function (result) {
										var customer2 = Object.assign(JSBridge.cache.get("customer"), personInfo2);
										JSBridge.cache.update("customer", customer2);
									},
									error: function (error) {
										$.toast.fail(error.message);
									}
								});
							}
							$.toast.success("完善资料成功", function () {
								var from = $.getParam("from");
								if (!from) {
									JSBridge.forward.inside({url:'customer/member_center.htm'});//完善后跳回会员中心
								} else {
									JSBridge.forward.inside({url: decodeURIComponent(from), newView: true});
								}
							});
						},
						error: function (error) {
							$.toast.fail(error.message);
						}
					});
				};
				
				function update(){
					var customer=JSBridge.cache.get("customer");
					var pwd=customer.pwd;
					var year18Date;

					if(!(self.birth_date&&self.sex&&pwd)){
						$.toast.fail('生日、性别必须填写');
						return false;
					}
					if(self.birth_date) {
						year18Date = new Date();
						year18Date.setFullYear(year18Date.getFullYear() - 18);

						if(self.birthday.getTime() > year18Date.getTime()) {
							$.toast.fail("您的年龄未满十八岁");
		            		return false;
						}
					}

					var personInfo = {
						"sex":self.sex=='男'?'M':'F',
						"birth_date": self.formated_birthday,
						"email": self.email,
						"address": self.address,
						"remarks": self.remarks,
						'pwd':pwd
					};

					JSBridge.net.invoke({//调用更新用户信息接口
						url: "users/updateInfo",
						data: personInfo,
						success: function (result) {
							var customer = Object.assign(JSBridge.cache.get("customer"), personInfo);
							JSBridge.cache.update("customer", customer);
							$.toast.success("修改成功", function () {
								JSBridge.forward.inside({url:'customer/member_center.htm'});//完善后要跳转的页面
							});
						},
						error: function (error) {
							$.toast.fail(error.message);
						}
					});
				}
			}
		}
	});
	
	JSBridge.onReady(function() {
		var self=data;
    	if(!CustomerUtils.isLoged()) {
            return;
        }
		CheckUtil.infoCompleted(//公共方法判断用户是否完善了资料
			function () {
				self.isfinsh=true;
				updatecontrol=true;
				self.addInfo=false;
				finshed();
			},
			function () {
				self.isfinsh=false;
				updatecontrol=false;
				self.addInfo=true;
				nofinsh();
			}
		);
		
		function finshed(){
			JSBridge.net.invoke({ //调用用户信息接口
				url: "users/userInfo",
				data: {},
				success: function (result) {
					var customer = result.WSCustomers;
					var name_len=customer.real_name.length;
					var head_name=new String();
					self.verify_code=customer.verify_code;
					for(var i=0;i<name_len-1;i++){
						head_name+='*';
					}
					self.real_name=head_name+customer.real_name.charAt(name_len-1);
					self.sex=customer.sex=='M'?"男":'女';
					self.birth_date=customer.birth_date ? customer.birth_date.slice(0,10) : '';
					self.email=customer.email;
					
					self.birthdateAlready = customer.customer_level==5 || customer.customer_level==6 ? true : false;
					CheckUtil.emailBinded(function () {
						self.emailAlready = true;
					}, function () {
						self.emailAlready = false;
					});
					
					self.address=customer.address;
					self.remarks=customer.remarks;
					self.nofinsh=true;
				},
				error: function (error) {
					$.toast.fail(error.message);
				}
			}); 
		};
		function nofinsh(){
			self.nofinsh=false;
		};
	});
})();
</script>